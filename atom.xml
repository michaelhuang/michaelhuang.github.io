<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>learn to love less</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://michaelhuang.github.io/"/>
  <updated>2016-06-03T14:52:49.000Z</updated>
  <id>http://michaelhuang.github.io/</id>
  
  <author>
    <name>huangzhf</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Test Dbunit</title>
    <link href="http://michaelhuang.github.io/2016/Spring-test-dbunit/"/>
    <id>http://michaelhuang.github.io/2016/Spring-test-dbunit/</id>
    <published>2016-04-20T14:34:02.000Z</published>
    <updated>2016-06-03T14:52:49.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;如何基于 &lt;code&gt;Spring testing framework + DBUnit&lt;/code&gt; 简单实现一个自动化测试工具？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@DataSets&lt;/span&gt;(setUpDataSet = &lt;span class=&quot;string&quot;&gt;&quot;setUp.xls&quot;&lt;/span&gt;, expectDataSet = &lt;span class=&quot;string&quot;&gt;&quot;expect.xls&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试方法执行前，先load&lt;code&gt;setUp.xls&lt;/code&gt;中数据到测试库，测试方法结束后，自动和&lt;code&gt;expect.xls&lt;/code&gt;中数据做比对；excel里面保存的是表的数据，多个表以多个sheet页形式体现，&lt;code&gt;sheet name&lt;/code&gt;即是&lt;code&gt;table name&lt;/code&gt;；其实github上已经有个功能非常完善的工具&lt;a href=&quot;http://springtestdbunit.github.io/spring-test-dbunit/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spring Test DBUnit&lt;/a&gt;，这里只是说下大体实现思路&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;定义注解&quot;&gt;&lt;a href=&quot;#定义注解&quot; class=&quot;headerlink&quot; title=&quot;定义注解&quot;&gt;&lt;/a&gt;定义注解&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Target&lt;/span&gt;(ElementType.METHOD)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;@interface&lt;/span&gt; DataSets &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;setUpDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;expectDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;初始化XlsFileLoader和DataSourceDatabaseTester&quot;&gt;&lt;a href=&quot;#初始化XlsFileLoader和DataSourceDatabaseTester&quot; class=&quot;headerlink&quot; title=&quot;初始化XlsFileLoader和DataSourceDatabaseTester&quot;&gt;&lt;/a&gt;初始化XlsFileLoader和DataSourceDatabaseTester&lt;/h2&gt;&lt;p&gt;&lt;code&gt;dbunit-2.4.8&lt;/code&gt;中已经有现成的&lt;code&gt;org.dbunit.util.fileloader.XlsDataFileLoader&lt;/code&gt;，蛋疼的是它是从&lt;code&gt;getClass().getResource(filename)&lt;/code&gt;加载，建议重写一个，从&lt;code&gt;ClassPathResource(filename).getURL()&lt;/code&gt;加载&lt;/p&gt;
&lt;p&gt;一般项目构建都会配置&lt;code&gt;dataSource&lt;/code&gt;，所以用&lt;code&gt;DataSourceDatabaseTester&lt;/code&gt;再合适不过，它来管理测试过程中数据库连接的创建销毁，以及最最重要的，根据具体&lt;code&gt;DatabaseOperation&lt;/code&gt;处理数据集；有个地方要注意一下，连接属性最好设置一下数据库类型，方式是实现&lt;code&gt;IOperationListener&lt;/code&gt;接口中&lt;code&gt;connectionRetrieved()&lt;/code&gt;加入下面代码，这个方法会在每次new或retrieved一个连接后立即调用&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;connection.getConfig().setProperty(DatabaseConfig.PROPERTY_DATATYPE_FACTORY, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MySqlDataTypeFactory())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置bean&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Configuration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@ImportResource&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;classpath:/application-root-bean.xml&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Profile&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServiceTestConfig&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  DataSource dataSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@Bean&lt;/span&gt;(name=&lt;span class=&quot;string&quot;&gt;&quot;databaseTester&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; DataSourceDatabaseTester &lt;span class=&quot;title&quot;&gt;dataSourceDatabaseTester&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSourceDatabaseTester databaseTester = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DataSourceDatabaseTester(dataSource());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    databaseTester.setOperationListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CustOperationListener());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; databaseTester;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@Bean&lt;/span&gt;(name=&lt;span class=&quot;string&quot;&gt;&quot;xlsDataFileLoader&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; CustomXlsFileLoader &lt;span class=&quot;title&quot;&gt;xlsDataFileLoader&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CustomXlsFileLoader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;实现TestExecutionListener&quot;&gt;&lt;a href=&quot;#实现TestExecutionListener&quot; class=&quot;headerlink&quot; title=&quot;实现TestExecutionListener&quot;&gt;&lt;/a&gt;实现TestExecutionListener&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先&lt;code&gt;prepareTestInstance()&lt;/code&gt;中&lt;code&gt;DI&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;接着&lt;code&gt;beforeTestMethod()&lt;/code&gt;中加载&lt;code&gt;setUpDataSet&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;最后&lt;code&gt;afterTestMethod()&lt;/code&gt;中比对&lt;code&gt;expectDataSet&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServiceTestExecutionListener&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestExecutionListener&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IDatabaseTester databaseTester;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; CustomXlsFileLoader xlsFileLoader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IDataSet expectDataSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepareTestInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TestContext testCtx)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    databaseTester = (IDatabaseTester) testCtx.getApplicationContext().getBean(&lt;span class=&quot;string&quot;&gt;&quot;databaseTester&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xlsFileLoader = (CustomXlsFileLoader) testCtx.getApplicationContext().getBean(&lt;span class=&quot;string&quot;&gt;&quot;xlsDataFileLoader&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;beforeTestMethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TestContext testCtx)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Check for existence of DataSets annotation for the method under testing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSets dataSetAnnotation = testCtx.getTestMethod().getAnnotation(DataSets.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( dataSetAnnotation == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String dataSetName = dataSetAnnotation.setUpDataSet();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( ! &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.equals(dataSetName) ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      IDataSet dataSet = xlsFileLoader.load(dataSetName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      databaseTester.setDataSet(dataSet);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      databaseTester.onSetup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String expectDataName = dataSetAnnotation.expectDataSet();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( ! &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.equals(expectDataName)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      expectDataSet = xlsFileLoader.load(expectDataName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;afterTestMethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TestContext testCtx)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; != expectDataSet &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; != databaseTester) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IDatabaseConnection connection = databaseTester.getConnection();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        connection.getConfig().setProperty(DatabaseConfig.PROPERTY_DATATYPE_FACTORY, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MySqlDataTypeFactory());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IDataSet actualDataSet = connection.createDataSet();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertNotNull(actualDataSet);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String tableName : expectDataSet.getTableNames()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;// 以expectDataSet中字段为准，比如CREATE_TIME, MODIFY_TIME这种字段比较是没有意义的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          ITable filteredTable = DefaultColumnFilter.includedColumnsTable(actualDataSet.getTable(tableName),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            expectDataSet.getTableMetaData(tableName).getColumns());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Assertion.assertEquals(expectDataSet.getTable(tableName), filteredTable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Clear up testing data if exists&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (databaseTester != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        databaseTester.onTearDown();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;beforeTestClass&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TestContext testCtx)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;afterTestClass&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TestContext testCtx)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;配置使用&quot;&gt;&lt;a href=&quot;#配置使用&quot; class=&quot;headerlink&quot; title=&quot;配置使用&quot;&gt;&lt;/a&gt;配置使用&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@RunWith&lt;/span&gt;(SpringJUnit4ClassRunner.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@ContextConfiguration&lt;/span&gt;(classes = &amp;#123;ServiceTestConfig.class&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@TestExecutionListeners&lt;/span&gt;(&amp;#123;ServiceTestExecutionListener.class&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@ActiveProfiles&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbstractServiceTest&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbstractTransactionalJUnit4SpringContextTests&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dbunit.sourceforge.net/howto.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DBUnit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.shenyanchao.cn/blog/2013/06/27/usage-dbunit/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DBUnit使用案例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/test/context/TestExecutionListener.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spring TestExecutionListener&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/context/annotation/Configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spring Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/webservices/ws-springjava/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;纯Java配置bean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/testing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spring-framework-reference-testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;如何基于 &lt;code&gt;Spring testing framework + DBUnit&lt;/code&gt; 简单实现一个自动化测试工具？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@DataSets&lt;/span&gt;(setUpDataSet = &lt;span class=&quot;string&quot;&gt;&quot;setUp.xls&quot;&lt;/span&gt;, expectDataSet = &lt;span class=&quot;string&quot;&gt;&quot;expect.xls&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试方法执行前，先load&lt;code&gt;setUp.xls&lt;/code&gt;中数据到测试库，测试方法结束后，自动和&lt;code&gt;expect.xls&lt;/code&gt;中数据做比对；excel里面保存的是表的数据，多个表以多个sheet页形式体现，&lt;code&gt;sheet name&lt;/code&gt;即是&lt;code&gt;table name&lt;/code&gt;；其实github上已经有个功能非常完善的工具&lt;a href=&quot;http://springtestdbunit.github.io/spring-test-dbunit/index.html&quot;&gt;Spring Test DBUnit&lt;/a&gt;，这里只是说下大体实现思路&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hive自定义文件读取</title>
    <link href="http://michaelhuang.github.io/2016/hive%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    <id>http://michaelhuang.github.io/2016/hive自定义文件读取/</id>
    <published>2016-04-03T13:08:36.000Z</published>
    <updated>2016-05-28T12:57:46.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;考虑这么个场景：某天你leader过来跟你说，我这现在有大量文本文件，大小不一，大的好几十G，小的几百兆；现在想提取出来共有的几个业务字段做分析，但是每种类型的接口文件的字段解析规则还不一样，比如业务字段A，在file1里面在第10字节到18字节之间，在file2中在第8字节到第16字节之间，问你怎么办？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;如果有现成的hdfs集群，其实这事儿用&lt;code&gt;Hive自定义文件读取&lt;/code&gt;这个特性会非常省事儿！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/hive-serde.jpg&quot; alt=&quot;hive-serde&quot;&gt;&lt;/p&gt;
&lt;p&gt;文件如何读取（&lt;code&gt;inputformat&lt;/code&gt;），读取的内容如何解析（&lt;code&gt;serde&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;你会发现，你只需要实现几个简单的类，篇头问题即迎刃而解&lt;/p&gt;
&lt;h2 id=&quot;Inputformat&quot;&gt;&lt;a href=&quot;#Inputformat&quot; class=&quot;headerlink&quot; title=&quot;Inputformat&quot;&gt;&lt;/a&gt;Inputformat&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;既然处理文本，当然&lt;code&gt;org.apache.hadoop.mapred.TextInputFormat&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;只需实现接口，把Split传给&lt;code&gt;RecordReader&lt;/code&gt;，具体文本切分规则交给&lt;code&gt;RecordReader&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/hive/XFileInputFormat.png&quot; alt=&quot;XFileInputFormat&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;RecordReader&quot;&gt;&lt;a href=&quot;#RecordReader&quot; class=&quot;headerlink&quot; title=&quot;RecordReader&quot;&gt;&lt;/a&gt;RecordReader&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;主要逻辑在&lt;code&gt;next()&lt;/code&gt;中，通过&lt;code&gt;LineRecordReader&lt;/code&gt;解析Split，然后生成原始row&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(LongWritable key, Text value)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// get current line&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.reader.next(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.lineKey, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.lineValue)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    key.set(key.get() + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lineValue.append(byteOfSplitName, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, byteOfSplitName.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value.set(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.lineValue.getBytes());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Text.validateUTF8(value.getBytes());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/hive/XRecordReader.png&quot; alt=&quot;XRecordReader&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Serde&quot;&gt;&lt;a href=&quot;#Serde&quot; class=&quot;headerlink&quot; title=&quot;Serde&quot;&gt;&lt;/a&gt;Serde&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;负责把每一个原生row根据业务规则解析成多个field，这才产出一条有意义的record&lt;/li&gt;
&lt;li&gt;&lt;code&gt;initialize()&lt;/code&gt;初始化，根据表schema定义，确定好有哪些列，每一列都是什么类型&lt;/li&gt;
&lt;li&gt;我们只想读取，所以只需实现&lt;code&gt;deserialize()&lt;/code&gt;接口&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://db3.iteye.com/blog/1072778&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ObjectInspector&lt;/a&gt;很精髓！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/hive/XSerDe.png&quot; alt=&quot;XSerDe&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hive-Sql-定义&quot;&gt;&lt;a href=&quot;#Hive-Sql-定义&quot; class=&quot;headerlink&quot; title=&quot;Hive Sql 定义&quot;&gt;&lt;/a&gt;Hive Sql 定义&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hive -e &quot;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;EXISTS&lt;/span&gt; khala_his.dwd_acco_his&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c_clientid &lt;span class=&quot;keyword&quot;&gt;STRING&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c_custname &lt;span class=&quot;keyword&quot;&gt;STRING&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  d_datadate &lt;span class=&quot;built_in&quot;&gt;DATE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PARTITIONED &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ROW&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FORMAT&lt;/span&gt; SERDE &lt;span class=&quot;string&quot;&gt;&#39;com.michael.hive.XSerDe&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;STORED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  INPUTFORMAT &lt;span class=&quot;string&quot;&gt;&#39;com.michael.hive.XFileInputFormat&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  OUTPUTFORMAT &lt;span class=&quot;string&quot;&gt;&#39;com.michael.hive.XFileOutputFormat&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCATION &lt;span class=&quot;string&quot;&gt;&#39;/data/khala/his/dwd_acco_his&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Answer&quot;&gt;&lt;a href=&quot;#Answer&quot; class=&quot;headerlink&quot; title=&quot;Answer&quot;&gt;&lt;/a&gt;Answer&lt;/h2&gt;&lt;p&gt;说到这，还有个关键问题没解决，如何解决同一表schema适配不同文本文件呢？只需两步&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RecordReader&lt;/code&gt;把文件名&lt;code&gt;split.getPath().getName()&lt;/code&gt;拼到每一个row末尾，相当于加一个虚拟列，用来索引对应row解析规则&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SerDe&lt;/code&gt;解析字段规则时，根据虚拟列获取到解析规则，然后解析即可&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;tip&quot;&gt;&lt;br&gt;&lt;code&gt;org.apache.hadoop.io.Text&lt;/code&gt;标准UTF8编码，如果你的文本不是UTF8，生成row时要用&lt;code&gt;getBytes()&lt;/code&gt;，非&lt;code&gt;toString()&lt;/code&gt;；&lt;br&gt;解析类型时候，DECIMAL要用HiveDecimal.create(BigDecimal decimal)，DATE用java.sql.Date()&lt;br&gt;&lt;/div&gt;

&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/SerDe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache Hive Serde&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dummies.com/how-to/content/defining-table-record-formats-in-hive.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;defining table record formats in Hive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.coder4.com/archives/4031&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hive中的InputFormat、OutputFormat与SerDe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;考虑这么个场景：某天你leader过来跟你说，我这现在有大量文本文件，大小不一，大的好几十G，小的几百兆；现在想提取出来共有的几个业务字段做分析，但是每种类型的接口文件的字段解析规则还不一样，比如业务字段A，在file1里面在第10字节到18字节之间，在file2中在第8字节到第16字节之间，问你怎么办？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hive实现拉链存储</title>
    <link href="http://michaelhuang.github.io/2016/hive%E5%AE%9E%E7%8E%B0%E6%8B%89%E9%93%BE%E5%AD%98%E5%82%A8/"/>
    <id>http://michaelhuang.github.io/2016/hive实现拉链存储/</id>
    <published>2016-04-01T13:30:20.000Z</published>
    <updated>2016-05-28T10:27:53.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;什么是拉链存储？数据仓库经常用到，通过给record增加两个字段: 生效日期、失效日期，来记录数据的生命周期变化；好处是既节省存储空间，又保证历史数据变化的完整性，最重要的还能快速访问不同时段的数据快照&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;那为什么叫拉链呢？因为每回新更新record进来后，都会对旧record进行闭链（更改失效日期），同时对新record开链（更改生效日期），就像链条一样，一环扣一环&lt;/p&gt;
&lt;p&gt;下面以用户数据为例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/hive-lalian01.png&quot; alt=&quot;用户基本信息&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/hive-lalian02.png&quot; alt=&quot;数据一生&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/hive-lalian03.png&quot; alt=&quot;加入拉链日期&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/hive-lalian04.png&quot; alt=&quot;取某天快照&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/hive-lalian05.png&quot; alt=&quot;取一段时间快照&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hive-ODPS实现方法&quot;&gt;&lt;a href=&quot;#Hive-ODPS实现方法&quot; class=&quot;headerlink&quot; title=&quot;Hive/ODPS实现方法&quot;&gt;&lt;/a&gt;Hive/ODPS实现方法&lt;/h2&gt;&lt;p&gt;Hive两个特性：&lt;code&gt;only write once&lt;/code&gt;, &lt;code&gt;schema on read&lt;/code&gt;&lt;br&gt;一般来说存储底层是HDFS（当然有可能是spark或其他，本文不考虑），所以是做不了update的，update成本都不如覆盖重写了，可以考虑利用&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+WindowingAndAnalytics&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LEAD Function&lt;/a&gt;解决&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PRIMARY_KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        EFFECTIVE_DT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;CASE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LEAD&lt;/span&gt;(EFFECTIVE_DT,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;OVER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              (&lt;span class=&quot;keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; PRIMARY_KEY &lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; EFFECTIVE_DT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LEAD&lt;/span&gt;(EFFECTIVE_DT,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;OVER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              (&lt;span class=&quot;keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; PRIMARY_KEY &lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; EFFECTIVE_DT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; EXPIRED_DT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        EVENT_VALUE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           PRIMARY_KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           EFFECTIVE_DT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           EVENT_VALUE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           EXISTING_TIME_SERIES_TABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           EXPIRED_DT &lt;span class=&quot;keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;UNION&lt;/span&gt; ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           PRIMARY_KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           EFFECTIVE_DT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           EVENT_VALUE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; NEW_TIME_SERIES_TABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ) sub_1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;tip&quot;&gt;&lt;br&gt;该方法不具有幂等性，重复执行会导致多出&lt;code&gt;EFFECTIVE_DT = EXPIRED_DT&lt;/code&gt;的数据；如果无法避免重复执行，子查询里面需要去重&lt;br&gt;&lt;/div&gt;

</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;什么是拉链存储？数据仓库经常用到，通过给record增加两个字段: 生效日期、失效日期，来记录数据的生命周期变化；好处是既节省存储空间，又保证历史数据变化的完整性，最重要的还能快速访问不同时段的数据快照&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>锤子发布会</title>
    <link href="http://michaelhuang.github.io/2014/20140522_%E8%B6%85%E7%8E%B0%E5%AE%9E%E7%90%86%E6%83%B3%E4%B8%BB%E4%B9%89/"/>
    <id>http://michaelhuang.github.io/2014/20140522_超现实理想主义/</id>
    <published>2014-05-22T12:55:30.000Z</published>
    <updated>2016-03-18T05:42:54.000Z</updated>
    
    <content type="html">&lt;p&gt;今天看了老罗的锤子专场单口相声，虽不是一个划时代的产品，但是不可否认，确实是个很认真，很有诚意，极具工匠精神的产品。除产品本身外，他那种解决问题的方式更让我印象深刻&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;关注细节，善于发现问题，并敢于刨根问题&quot;&gt;&lt;a href=&quot;#关注细节，善于发现问题，并敢于刨根问题&quot; class=&quot;headerlink&quot; title=&quot;关注细节，善于发现问题，并敢于刨根问题&quot;&gt;&lt;/a&gt;关注细节，善于发现问题，并敢于刨根问题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;4000W像素拍出效果为何比不上800W？&lt;br&gt;同样装备富士通800W的两个手机，为何效果相差如此之大？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;资源整合能力&quot;&gt;&lt;a href=&quot;#资源整合能力&quot; class=&quot;headerlink&quot; title=&quot;资源整合能力&quot;&gt;&lt;/a&gt;资源整合能力&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;一个英语老师，带着一帮“英语老师”，两年时间如何从零到发布锤子？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;人性化，化繁为简&quot;&gt;&lt;a href=&quot;#人性化，化繁为简&quot; class=&quot;headerlink&quot; title=&quot;人性化，化繁为简&quot;&gt;&lt;/a&gt;人性化，化繁为简&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;所有操作都是以人为主，以减少操作次数提高效率为宗旨，手机是被人玩，不是人被手机玩，目前国内大部分手机厂商都是一味拼参数，而完全忽视用户体验，这是舍本求末，利益熏心所致；这也可以看出好的产品经理有多么重要，不能只有逻辑思维编码能力，还要有审美能力，一定的艺术细菌，更重要的是要有对改善人类生活品质的强烈欲望和持久基情&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;不断接受反馈，不断否决自己，寻找完美解决方案&quot;&gt;&lt;a href=&quot;#不断接受反馈，不断否决自己，寻找完美解决方案&quot; class=&quot;headerlink&quot; title=&quot;不断接受反馈，不断否决自己，寻找完美解决方案&quot;&gt;&lt;/a&gt;不断接受反馈，不断否决自己，寻找完美解决方案&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;锤子系统从发布测试版到正式发布，不断的和用户互动，绞尽脑汁，全力优化解决每一个问题，能做到这一点，也不难，难的是能否一被子&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;老罗一直都是高调做事，高调做人，两年前就告知世界：他，一个英语老师，才是乔布斯衣钵的唯一传人，当时的结果可想而知；其实，国内科技创业公司，早期这样高调，很容易死的很惨，锤子通过两年时间，走到今天，实属不易；不过，谁叫他是老罗，做事本来就不按套路，他要是早期夹着尾巴搞锤子，结果未必会有现在好&lt;/p&gt;
&lt;p&gt;最后老罗爆料他家人也被问候，确实感到很震撼，现实世界总是充满悲观主义，也从不缺少喷子，他们不喜欢变化，即使是好的思想，好的创新理念，也会选择逃避，甚至怒而击之&lt;/p&gt;
&lt;p&gt;喷子的使命：[我不行，你也得不行，你要行，我们就有权力集结起来，维护原来的秩序，一起喷死你]&lt;br&gt;毕竟不行的人占大多数，一人一口吐沫星子，也能淹死你&lt;/p&gt;
&lt;p&gt;科技在发展，社会在进步，可是人们的道德底线貌似在一次一次的刷新；为了“五毛钱”，什么事情都可以做出来&lt;/p&gt;
&lt;p&gt;世界如此险恶，你要内心强大&lt;/p&gt;
&lt;p&gt;革命尚未成功，锤子仍需努力，是中国创客的崛起，还是一种文化现象的绝唱？&lt;br&gt;拭目以待~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天看了老罗的锤子专场单口相声，虽不是一个划时代的产品，但是不可否认，确实是个很认真，很有诚意，极具工匠精神的产品。除产品本身外，他那种解决问题的方式更让我印象深刻&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>好玩的Ssh</title>
    <link href="http://michaelhuang.github.io/2014/20140402_ssh_two/"/>
    <id>http://michaelhuang.github.io/2014/20140402_ssh_two/</id>
    <published>2014-04-02T12:04:51.000Z</published>
    <updated>2016-03-18T06:12:48.000Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# git push 总特么timeout咋整&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 这个命令是用来调试用的，用来挖地址挺不错的, 我就挖到一个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh -vT git@github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ~/.ssh/config&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  User git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  HostName 192.30.252.131&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;ssh-agent-forwaring&quot;&gt;&lt;a href=&quot;#ssh-agent-forwaring&quot; class=&quot;headerlink&quot; title=&quot;ssh agent forwaring&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.unixwiz.net/techtips/ssh-agent-forwarding.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ssh agent forwaring&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+     git push        +---------+       git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt;/pull      +---------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  client | =================&amp;gt;  |  github |    ==================&amp;gt;    |  server |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|         |                     |         |                           |         |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+                     +---------+                           +---------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个特性，deploy server的时候很方便；只需要添加client端的公钥到github即可~&lt;br&gt;&lt;a href=&quot;https://developer.github.com/guides/using-ssh-agent-forwarding/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何配置请温柔地点击我&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;ssh-local-port-forwarding&quot;&gt;&lt;a href=&quot;#ssh-local-port-forwarding&quot; class=&quot;headerlink&quot; title=&quot;ssh local port forwarding&quot;&gt;&lt;/a&gt;ssh local port forwarding&lt;/h2&gt;&lt;p&gt;出于安全考虑，server常规接口一般都会屏蔽掉，只留下80/443(webservers)、22(ssh, 当然sshd_config中可以更换掉), 但是有时候可能需要连接数据库，比如mysql(3306)，但是本地3306接口被屏蔽掉了，如何破？&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 连接本地10588接口即可连接远端mysql数据库_&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#   -f    _后台运行_&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#   -N    _禁止执行ssh remote command_&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#   -L    _本地接口定向_&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; -N -L 10588:127.0.0.1:3306 name@database.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ~/.ssh/config&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host tunnel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  HostName database.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  IdentityFile ~/.ssh/database.example.key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  LocalForward 10588 127.0.0.1:3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  User name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; -N tunnel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Well known ports&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;git-push总提示输入username-passwd&quot;&gt;&lt;a href=&quot;#git-push总提示输入username-passwd&quot; class=&quot;headerlink&quot; title=&quot;git push总提示输入username/passwd&quot;&gt;&lt;/a&gt;git push总提示输入username/passwd&lt;/h2&gt;&lt;p&gt;这是因为clone的时候用的https，改成ssh clone url&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git remote &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-url origin git@github.com:username/repo.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;神器-OSX-Fuse&quot;&gt;&lt;a href=&quot;#神器-OSX-Fuse&quot; class=&quot;headerlink&quot; title=&quot;神器 OSX Fuse&quot;&gt;&lt;/a&gt;神器 &lt;a href=&quot;http://osxfuse.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OSX Fuse&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;scp这命令都知道啊，但是命令敲起来还是有点麻烦，能不能直接像操作本地文件系统一样操作远程文件那？装上他，只需要将远程文件夹挂载到本地指定文件路径即可实现&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;vim-emacs-编辑远程文件&quot;&gt;&lt;a href=&quot;#vim-emacs-编辑远程文件&quot; class=&quot;headerlink&quot; title=&quot;vim / emacs 编辑远程文件&quot;&gt;&lt;/a&gt;vim / emacs 编辑远程文件&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://vim.wikia.com/wiki/Editing_remote_files_via_scp_in_vim&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;for vim&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;for emacs&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# git push 总特么timeout咋整&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 这个命令是用来调试用的，用来挖地址挺不错的, 我就挖到一个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh -vT git@github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ~/.ssh/config&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  User git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  HostName 192.30.252.131&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>为何你的Remote Ssh Command会报错(bash)</title>
    <link href="http://michaelhuang.github.io/2014/20140401_ssh_one/"/>
    <id>http://michaelhuang.github.io/2014/20140401_ssh_one/</id>
    <published>2014-04-01T12:07:26.000Z</published>
    <updated>2016-03-18T05:51:11.000Z</updated>
    
    <content type="html">&lt;p&gt;先说下这问题咋来的，目前开发流程如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+---------------+       scp files...                     +-----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| localhost     |  ===================================&amp;gt;  | remote host     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; coding  |   remote ssh &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; compiling     |   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; compiling |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------------+                                        +-----------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如上图，代码是本地马吊们敲出来地，so文件是要放到远程开发环境编译出来地；&lt;br&gt;普通青年尼，可能是打开xshell，xftp，先把文件拖上去，然后ssh登陆编译环境，然后make;&lt;br&gt;效率极低不说，逼格也不够啊，于是乎就有了下面代码：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scp *&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;*.&amp;#123;gcc,h,pc,cpp&amp;#125; ya-dev:~/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh ya-dev &lt;span class=&quot;string&quot;&gt;&#39;cd ~/src; ls &#39;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;*&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;*&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;.gcc  | xargs -I &amp;#123;&amp;#125; make -f &amp;#123;&amp;#125; ORA_VER=10&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;问题来了，远程执行会报错，部分lib库找不到；但是ssh登陆后再执行就没问题~&lt;br&gt;&lt;code&gt;ssh ya-dev env&lt;/code&gt; 一看，果然缺少很多环境变量，为什么会这样呢，这就要从爷爷粮票的故事讲起了~&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Shell-modes&quot;&gt;&lt;a href=&quot;#Shell-modes&quot; class=&quot;headerlink&quot; title=&quot;Shell modes&quot;&gt;&lt;/a&gt;Shell modes&lt;/h2&gt;&lt;p&gt;主要有以下两种模式&lt;/p&gt;
&lt;h4 id=&quot;login&quot;&gt;&lt;a href=&quot;#login&quot; class=&quot;headerlink&quot; title=&quot;login&quot;&gt;&lt;/a&gt;login&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;你打开一个shell或者terminal，提示输入用户名密码才能登陆，这就是个login shell&lt;/li&gt;
&lt;li&gt;如果你打开terminal就能直接用，那non-login shell(Mac OSX特殊一些)&lt;/li&gt;
&lt;li&gt;总玩ubuntu的应该知道，&lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;F1&lt;/code&gt;  出来的就是个login shell&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;interactive&quot;&gt;&lt;a href=&quot;#interactive&quot; class=&quot;headerlink&quot; title=&quot;interactive&quot;&gt;&lt;/a&gt;interactive&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;你打开的shell有prompt，并且它的stdin、stderr都定向到terminal&lt;/li&gt;
&lt;li&gt;上面那是术语，名字就能看出来，互动嘛，你通过ssh登录远程机器，ssh server肯定要给你个pty吧，好让你执行命令&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Test&quot;&gt;&lt;a href=&quot;#Test&quot; class=&quot;headerlink&quot; title=&quot;Test&quot;&gt;&lt;/a&gt;Test&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;me@&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-mac$  `[[ $- == *i* ]] &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Interactive&#39;&lt;/span&gt; || &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Not interactive&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Interactive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;me@&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-mac$  `&lt;span class=&quot;built_in&quot;&gt;shopt&lt;/span&gt; -q login_shell &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Login shell&#39;&lt;/span&gt; || &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Not login shell&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Login shell    &lt;span class=&quot;comment&quot;&gt;# 特殊 for mac osx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;me@&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-mac$  `ssh ubuntu &lt;span class=&quot;string&quot;&gt;&quot;[[ $- == *i* ]] &amp;amp;&amp;amp; echo &#39;Interactive&#39; || echo &#39;Not interactive&#39;&quot;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Interactive    &lt;span class=&quot;comment&quot;&gt;# 因为我用的terminal是interactive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;me@&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-mac$  `ssh ubuntu &lt;span class=&quot;string&quot;&gt;&quot;shopt -q login_shell &amp;amp;&amp;amp; echo &#39;Login shell&#39; || echo &#39;Not login shell&#39;&quot;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Not login shell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;me@&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-ubuntu$ `[[ $- == *i* ]] &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Interactive&#39;&lt;/span&gt; || &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Not interactive&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Interactive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;me@&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-ubuntu$ `&lt;span class=&quot;built_in&quot;&gt;shopt&lt;/span&gt; -q login_shell &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Login shell&#39;&lt;/span&gt; || &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Not login shell&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Not login shell  &lt;span class=&quot;comment&quot;&gt;# 有别于mac osx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;me@&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-mac$ `bash test.sh`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Not interactive  &lt;span class=&quot;comment&quot;&gt;# bash script.sh：non-login,non-interactive; 说明ssh remote command 是 non-login,non-interactive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;me@&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-mac$ `cat test.sh`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh ubuntu &lt;span class=&quot;string&quot;&gt;&quot;[[ $- == *i* ]] &amp;amp;&amp;amp; echo &#39;Interactive&#39; || echo &#39;Not interactive&#39;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Shell-init-files&quot;&gt;&lt;a href=&quot;#Shell-init-files&quot; class=&quot;headerlink&quot; title=&quot;Shell init files&quot;&gt;&lt;/a&gt;Shell init files&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://wholetsthedogout.qiniudn.com/bash_init.png&quot; alt=&quot;how the bash load init files&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Answer&quot;&gt;&lt;a href=&quot;#Answer&quot; class=&quot;headerlink&quot; title=&quot;Answer&quot;&gt;&lt;/a&gt;Answer&lt;/h2&gt;&lt;p&gt;回到开篇问题，为什么少了很多环境变量那，从上图可以看出，俺的脚本是non-login,non-interactive&lt;br&gt;所以.bash_profile,.bashrc都没被执行到~&lt;/p&gt;
&lt;p&gt;&lt;em&gt;解决方法&lt;/em&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用到的变量都加到&lt;code&gt;/etc/environment&lt;/code&gt;中，这个就是全局了，如果你不想影响其他用户，请看下一方法&lt;/li&gt;
&lt;li&gt;sshd_config配置项PermitUserEnvironment&lt;ul&gt;
&lt;li&gt;vim &lt;code&gt;/etc/sshd_config&lt;/code&gt;, add &lt;code&gt;&amp;#39;PermitUserEnvironment yes&amp;#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加变量到&lt;code&gt;~/.ssh/environment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;service ssh restart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh remote env&lt;/code&gt; 测试一下&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$BASH_ENV&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;这个变量默认是空值，在哪有效设置让我有些迷惑&lt;/li&gt;
&lt;li&gt;你想想，放到&lt;code&gt;/etc/enviroment&lt;/code&gt;里吧，不如直接方法1了&lt;/li&gt;
&lt;li&gt;放到&lt;code&gt;~/.bash_profile ~/.bashrc&lt;/code&gt;里吧，就像之前说的，是读取不到的&lt;/li&gt;
&lt;li&gt;google到一方法，通过&lt;a href=&quot;http://seejeffrun.blogspot.com/2008/04/cron-doesnt-read-minds-customizing-my.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;crontab&lt;/a&gt;来解决&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://capistranorb.com/documentation/faq/why-does-something-work-in-my-ssh-session-but-not-in-capistrano/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Why does something work in my SSH session, but not in Capistrano?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.solipsys.co.uk/new/BashInitialisationFiles.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bash init files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sstephenson/rbenv/wiki/Unix-shell-initialization&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rbenv unix shell initialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tldp.org/LDP/abs/html/intandnonint.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Interactive and non-interactive shells and scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bash startup files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.thinkplexx.com/learn/howto/security/ssh/setting-ssh-remote-host-environment-variables-interactive-shell&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Setting ssh remote host environment variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://linux.die.net/man/5/ssh_config&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ssh_config(5) - Linux man page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;先说下这问题咋来的，目前开发流程如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+---------------+       scp files...                     +-----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| localhost     |  ===================================&amp;gt;  | remote host     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; coding  |   remote ssh &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; compiling     |   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; compiling |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------------+                                        +-----------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如上图，代码是本地马吊们敲出来地，so文件是要放到远程开发环境编译出来地；&lt;br&gt;普通青年尼，可能是打开xshell，xftp，先把文件拖上去，然后ssh登陆编译环境，然后make;&lt;br&gt;效率极低不说，逼格也不够啊，于是乎就有了下面代码：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scp *&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;*.&amp;#123;gcc,h,pc,cpp&amp;#125; ya-dev:~/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh ya-dev &lt;span class=&quot;string&quot;&gt;&#39;cd ~/src; ls &#39;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;*&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;*&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;.gcc  | xargs -I &amp;#123;&amp;#125; make -f &amp;#123;&amp;#125; ORA_VER=10&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;问题来了，远程执行会报错，部分lib库找不到；但是ssh登陆后再执行就没问题~&lt;br&gt;&lt;code&gt;ssh ya-dev env&lt;/code&gt; 一看，果然缺少很多环境变量，为什么会这样呢，这就要从爷爷粮票的故事讲起了~&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Assassins</title>
    <link href="http://michaelhuang.github.io/2014/20140331_pic_test/"/>
    <id>http://michaelhuang.github.io/2014/20140331_pic_test/</id>
    <published>2014-03-30T19:00:17.000Z</published>
    <updated>2016-04-15T14:11:20.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;Give me the name, I’ll give U the blood&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/games/04.jpg&quot; alt=&quot;Give me the name, I&amp;#39;ll give U the blood&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Speak to me or speak to God&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/games/01.jpg&quot; alt=&quot;Speak to me or speak to God&quot;&gt;&lt;br&gt;&lt;strong&gt;We work in the dark and serve the lights,we are assassins&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/games/03.jpg&quot; alt=&quot;We work in the dark and serve the lights,we are assassins&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Give me the name, I’ll give U the blood&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://michaelhuang.qiniudn.com/games/04.jpg&quot; alt=&quot;Give me the name, I&amp;#39;ll give U the blood&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>He&#39;s Only Focused on What He Wrote</title>
    <link href="http://michaelhuang.github.io/2014/workout-2014/"/>
    <id>http://michaelhuang.github.io/2014/workout-2014/</id>
    <published>2014-01-01T15:39:26.000Z</published>
    <updated>2016-03-18T03:09:32.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;不要过没有审查过的生活&lt;/em&gt;&lt;br&gt;&lt;em&gt;~苏格拉底~&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;现在有的人，自己的量吃不下一口，他却买下了整卷书，想着全吞下去。结果全吐了出来不说，还消化不良&lt;/em&gt;&lt;br&gt;&lt;em&gt;~爱比克泰德~&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A ship in port is safe, but that is not what ships are built for.&lt;/em&gt;&lt;br&gt;&lt;em&gt;~Grace Murray Hopper~&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;每周保证至少&lt;code&gt;8h&lt;/code&gt;读书时间: 早上&lt;code&gt;0.5h * 7&lt;/code&gt; + 晚上&lt;code&gt;1.5h * 3&lt;/code&gt;(Mon. Wed. Fri.)&lt;/li&gt;
&lt;li&gt;健康饮食&lt;/li&gt;
&lt;li&gt;睡前&lt;code&gt;20min&lt;/code&gt;用来反省今天做的事情&lt;/li&gt;
&lt;li&gt;公开课&lt;code&gt;4&lt;/code&gt;个&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LUMA &amp;gt; 10w&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;每周至少&lt;code&gt;3天&lt;/code&gt;锻炼身体，尤其腰腹力量，嘿嘿&lt;/li&gt;
&lt;li&gt;english / spanish&lt;/li&gt;
&lt;li&gt;多和家人、朋友聊聊天&lt;/li&gt;
&lt;li&gt;be a Full-Stack Brogrammer&lt;/li&gt;
&lt;li&gt;切忌： 想的太多，做的太少！&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;不要过没有审查过的生活&lt;/em&gt;&lt;br&gt;&lt;em&gt;~苏格拉底~&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;现在有的人，自己的量吃不下一口，他却买下了整卷书，想着全吞下去。结果全吐了出来不说，还消化不良&lt;/em&gt;&lt;br&gt;&lt;em&gt;~爱比克泰德~&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A ship in port is safe, but that is not what ships are built for.&lt;/em&gt;&lt;br&gt;&lt;em&gt;~Grace Murray Hopper~&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Who Lets the Dog Out!</title>
    <link href="http://michaelhuang.github.io/1990/about-me/"/>
    <id>http://michaelhuang.github.io/1990/about-me/</id>
    <published>1990-03-30T16:59:25.000Z</published>
    <updated>2016-03-18T02:57:49.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;hola! soy un&lt;/strong&gt;&lt;br&gt;&lt;code&gt;ubuntuer | heavy mac user | minimalist | huge fan of MOOC&lt;/code&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;love&lt;/strong&gt;&lt;br&gt;&lt;code&gt;bicycling | long slow distance | coding | philosophy | video games | photography&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hate&lt;/strong&gt;&lt;br&gt;&lt;code&gt;smoking | cars | TV | heavy weather and heat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mail&lt;/strong&gt;&lt;br&gt;&lt;code&gt;echo zvpunryuhnat12.tznvy@pbz | tr a-z@. n-za-m.@&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;hola! soy un&lt;/strong&gt;&lt;br&gt;&lt;code&gt;ubuntuer | heavy mac user | minimalist | huge fan of MOOC&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
